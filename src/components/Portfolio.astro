---
import PortfolioSkillTag from "./PortfolioSkillTag.astro";
let skillToColor = {
"red" : "rgb(110, 54, 48)",
"purple": "rgb(73, 47, 100)",
"brown": "rgb(96, 59, 44)",
"default" : "rgb(55, 55, 55)",
"yellow" : "rgb(137, 99, 42)",
"green" : "rgb(43, 89, 63)",
"orange" : "rgb(133, 76, 29)",
"blue" : "rgb(40, 69, 108)",
"pink" : "rgb(105, 49, 76)",
"gray" : "rgb(90, 90, 90)",

}


async function  getPageIds(){
const response = await fetch("https://api.notion.com/v1/databases/3db8fe9ff1ab4b5ba2b427059834759b/query", {
      body: "{}",
      headers: {
        Authorization: "Bearer "+import.meta.env.NOTION_API_TOKEN,
        "Content-Type": "application/json",
        "Notion-Version": "2022-02-22"
      },
      method: "POST"
    });

const data = await response.json();
return (data.results.map((r) => r.id))
// return results
}



async function getPageData(pageID){
var myHeaders = new Headers();
myHeaders.append("Notion-Version", "2022-02-22");
myHeaders.append("Authorization", "Bearer "+ import.meta.env.NOTION_API_TOKEN);
myHeaders.append("Cookie", "__cf_bm=WOKP4K9Z2mcTJP4t.rOvEU2RCoecmWDxu_mOFMj7PeY-1702757076-1-AWhJI19kMpOkGvqYCq3q4FHTPseRH5nz5RXOfGC1a61W9goA9CXgRaB1zQ+gPRlYkTULyrTnT2E1KgUiEVVQAzU=");

var requestOptions = {
  method: 'GET',
  headers: myHeaders,
  redirect: 'follow'
};

const response = await fetch("https://api.notion.com/v1/pages/"+pageID , requestOptions)
const data = await response.json();
const returnData = {
    emoji: data.icon ? data.icon.emoji : "",
    title:data.properties.Name.title[0].text.content ,
    description: data.properties['Short Description'].rich_text[0] ?  data.properties['Short Description'].rich_text[0].text.content : "",
    skills: data.properties.Tags.multi_select,
    imgURL: data.properties.thumbnail.url ? data.properties.thumbnail.url : "https://ik.imagekit.io/haydencordeiro/JetChat_E4Z1UHU9l.png?updatedAt=1702754118556",
    searchTerm: data.properties.type.rich_text[0] ? data.properties.type.rich_text[0].plain_text : "web",
    youtubeURL: data.properties.Demo.url,
    projectLink: data.properties.projectLink.url
}
return returnData
}


let pageIds = (await getPageIds()).reverse()
var pageIDS = Array.from(new Set(pageIds));
const projects =  await Promise.all(pageIDS.map((pid) => getPageData(pid)))

function createSearchTerm(skillList) {
    return skillList.map(skill => `filter-${skill.name.toLowerCase().replace(/ /g, "_")} `);;
}

projects.forEach(project => {
    project.searchTerm = "filter-" + project.searchTerm.toLowerCase(    ) + " "  + createSearchTerm(project.skills).join(" ");
});

---

<!-- ======= Portfolio Section ======= -->
<section id="portfolio" class="portfolio section-show">
    <div class="container">
        <div class="section-title">
            <h2>Portfolio</h2>
            <p>My Works</p>
        </div>

        <div class="row">
            <div class="col-lg-12 d-flex justify-content-center">
                <ul id="portfolio-flters">
                    <li data-filter="*" class="filter-active">All</li>
                    <li data-filter=".filter-web">Website</li>
                    <li data-filter=".filter-app">App</li>
                    <li data-filter=".filter-ai">AI</li>
                    <li data-filter=".filter-others">Others</li>
                </ul>
            </div>
        </div>

        <div class="row portfolio-container">
            {
                projects.map((project) =>
            
            <div class=`col-lg-4 col-md-6 portfolio-item ${project.searchTerm}` >
                <div
                    class="portfolio-wrap"
                    style=" border-top-left-radius: 5px; border-top-right-radius: 5px;"
                >
                    <img
                        src={project.imgURL}
                        loading="lazy"
                        class="img-fluid"
                        alt={project.title}
                        style="height: 214px; min-width: 100%; object-fit: cover;"
                    />
                    <div class="portfolio-info">
                        <h4>{project.title}</h4>
                        <div class="portfolio-links">
                            {project.youtubeURL &&
                            
                                <a
                                target=" _blank"
                                href= {project.youtubeURL}
                                title={project.title}
                                ><i class="bi bi-youtube"></i></a
                            >
                            }
                            {project.projectLink &&
                            <a
                                target=" _blank"
                                href={project.projectLink}
                                title={project.title}
                                ><i class="bx bx-link"></i></a
                            >
                            }
                        </div>
                    </div>

                </div>
                <div
                        spellcheck="true"
                        placeholder="Untitled"
                        data-content-editable-leaf="true"
                        contenteditable="false"
                        class="portfolio-item-bg"
                        style="padding-left:11px;max-width: 100%; width: auto; padding-top: 0.5rem; word-break: break-word; caret-color: rgba(255, 255, 255, 0.81); font-size: 16px; line-height: 1.5; min-height: 24px; font-weight: 500; pointer-events: none;"
                    >
                        {project.title}
                    </div>
                    <div
                        class="portfolio-item-bg"
                        style="padding-top: 0px; padding-bottom: 10px; border-bottom-left-radius: 5px; border-bottom-right-radius: 5px;"
                    >
                        <div
                            class="portfolio-item-bg"
                            role="button"
                            tabindex="0"
                            data-testid="property-value"
                            style="user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; position: relative; display: flex; overflow: hidden; align-items: center; border-radius: 5px; margin: 0px 6px 2px; padding: 0px 5px 0px; font-size: 14px; min-height: 24px; white-space: nowrap; width: fit-content;"
                        >
                            <div
                                style="display: flex; justify-content: end; position: absolute; top: -1px; right: 0px; left: 0px; z-index: 2; margin: 0px 6px; pointer-events: none;"
                            >
                                <div
                                    style="display: flex; gap: 4px; pointer-events: auto;"
                                >
                                </div>
                            </div><div
                                style="line-height: 1.5; white-space: nowrap; word-break: normal; overflow: hidden;"
                            >
                                <span> {project.description}</span>
                            </div>
                        </div>
                        <div
                            role="button"
                            tabindex="0"
                            data-testid="property-value"
                            style="user-select: none; transition: background 20ms ease-in 0s; cursor: pointer; position: relative; display: flex; overflow: hidden; align-items: center; border-radius: 5px; margin: 0px 6px 2px; padding: 0px 5px; font-size: 14px; min-height: 24px; white-space: nowrap; width: fit-content;"
                        >
                            <div
                                style="display: flex; justify-content: end; position: absolute; top: -1px; right: 0px; left: 0px; z-index: 2; margin: 0px 6px; pointer-events: none;"
                            >
                                <div
                                    style="display: flex; gap: 4px; pointer-events: auto;"
                                >
                                </div>
                            </div><div
                            id="portfolio-skills"
                                style="overflow:hidden; display: flex; min-width: 0px; flex-shrink: 0; flex-wrap: nowrap; gap: 6px 8px;"
                            >
                        {project.skills.map(skill => 
                            <PortfolioSkillTag skill={skill} backgroundColor={skillToColor[skill.color]}/>
                            )}

   
                            </div>
                        </div>
                    </div>
            </div>)
        }



        </div>
    </div>
</section><!-- End Portfolio Section -->
